runtime bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()

set hidden
map <silent> <C-n> :noh<CR>
nmap <leader>6 <C-^>
set hls is ic scs
set ts=8 sw=4 sts=4 et
nmap <leader>il :set sw=8 sts=8 noet<CR>
nmap <leader>in :set sw=4 sts=4 et<CR>
set formatoptions+=n2
set tw=80
set number
syntax enable
filetype plugin indent on

if exists('+colorcolumn')
    set colorcolumn=+1
endif

" Disable nanoc output directory
set wildignore+=*/.output/*

" Disable CMake build directories
set wildignore+=*/.build/*

" Disable Node.js package directories
set wildignore+=*/node_modules/*

" Disable Python build directories
set wildignore+=*/build/lib/*

" Disable cached Python modules
set wildignore+=*/__pycache__/*,*.pyc,*.pyo

" Disable output and VCS files
set wildignore+=*.o,*.out,*.obj,.git,*.rbc,*.class,.svn,*.gem

" Disable archive files
set wildignore+=*.zip,*.tar.gz,*.tar.bz2,*.rar,*.tar.xz

" Ignore bundler and sass cache
set wildignore+=*/vendor/gems/*,*/vendor/cache/*,*/.bundle/*,*/.sass-cache/*

" Disable temp and backup files
set wildignore+=*.swp,*~,._*

" Ignore tox and htmlcov results
set wildignore+=*/.tox/*,*/htmlcov/*

" Ignore egg-info directories
set wildignore+=*/*.egg-info/*

set wildmode=longest,list,full
set wildmenu

set list listchars=tab:··,trail:◃,nbsp:•

" j and k should move within lines as they're wrapped
" from http://statico.github.io/vim.html
:nnoremap j gj
:nnoremap k gk

" Emacs bindings in command line
" from http://statico.github.io/vim.html
:cnoremap <C-a>  <Home>
:cnoremap <C-b>  <Left>
:cnoremap <C-f>  <Right>
:cnoremap <C-d>  <Delete>
:cnoremap <M-b>  <S-Left>
:cnoremap <M-f>  <S-Right>
:cnoremap <M-d>  <S-right><Delete>
:cnoremap <Esc>b <S-Left>
:cnoremap <Esc>f <S-Right>
:cnoremap <Esc>d <S-right><Delete>
:cnoremap <C-g>  <C-c>

" Airline configuration
set laststatus=2
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
let g:airline_left_sep=''
let g:airline_right_sep=''
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.branch = '⎇ '

let macvim_hig_shift_movement = 0

" upper/lower word
nmap <leader>u mQviwU`Q
nmap <leader>l mQviwu`Q

" upper/lower first char of word
nmap <leader>U mQgewvU`Q
nmap <leader>L mQgewvu`Q

" Some helpers to edit mode
" http://vimcasts.org/e/14
cnoremap %% <C-R>=expand('%:h').'/'<cr>
map <leader>ew :e %%
map <leader>es :sp %%
map <leader>ev :vsp %%
map <leader>et :tabe %%

" find merge conflict markers
nmap <silent> <leader>fc <ESC>/\v^[<=>]{7}( .*\|$)<CR>

" Ctrl-P stuffs
let g:ctrlp_open_new_file = 'r'
let g:ctrlp_open_multi = 'vr'
let g:ctrlp_jump_to_buffer = 2
let g:ctrlp_root_markers = ['.hg/']
nmap Q :CtrlPBuffer<CR>

au FileType c       setlocal formatoptions-=t
au FileType css     setlocal sw=4 sts=4
au FileType gitcommit setlocal tw=72
au FileType html    setlocal sw=2 sts=2
au FileType htmldjango  setlocal sw=2 sts=2
au FileType lua     setlocal formatoptions-=t sw=3 sts=3
au FileType python  setlocal formatoptions-=t
au FileType ragel   setlocal formatoptions-=t
au FileType ruby    setlocal sw=2 sts=2
au FileType yaml    setlocal sw=2 sts=2

au BufRead,BufNewFile PKGBUILD    set ft=sh
au BufRead,BufNewFile *.do        set ft=sh
au BufRead,BufNewFile *.json      set ft=javascript
au BufRead,BufNewFile *.pandoc    set ft=markdown
au BufRead,BufNewFile *.rockspec  set ft=lua
au BufRead,BufNewFile *.ronn      set ft=markdown
au BufRead,BufNewFile *.wfd       set ft=lua
au BufRead,BufNewFile *.wfd.error set ft=lua
au BufRead,BufNewFile *.lua.symlink  set ft=lua

" Remember last location in file, but not for commit messages.
" see :help last-position-jump
au BufReadPost * if &filetype !~ '^git\c' && line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal! g`\"" | endif

set backupdir=~/.vim/_backup/
set directory=~/.vim/_temp/
set viminfo='50,\"1000,n~/var/viminfo

" GUI stuff

if has("gui_running")
    set columns=175
    set lines=55
    set background=dark
    let g:solarized_visibility="low"
    set guioptions-=T   " no toolbar
    set guioptions-=l   " no scrollbars
    set guioptions-=r
    set guioptions-=L
    set guioptions-=R
    colorscheme solarized

    set keymodel=
    set gcr=n:blinkon0
else
    set t_Co=256
endif

if has("gui_macvim")
  set guifont=Ubuntu\ Mono\ derivative\ Powerline:h16
  set fuopt=maxvert,maxhorz
  map <D-F> :set fu!<CR>
elseif has("gui_gtk2")
  set guifont=Ubuntu\ Mono\ derivative\ Powerline\ 12
endif
